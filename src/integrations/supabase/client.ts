
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from '../../types/supabase';

const SUPABASE_URL = "https://bfmxxuarnqmxqqnpxqjf.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImJmbXh4dWFybnFteHFxbnB4cWpmIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDYxMTc4ODMsImV4cCI6MjA2MTY5Mzg4M30.MAQZ7I3pshciBJANhlPThK6XBxGemIPgflsMDz3OB_4";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

// Create client with session persistence enabled
export const supabase = createClient<Database>(
  SUPABASE_URL, 
  SUPABASE_PUBLISHABLE_KEY,
  {
    auth: {
      persistSession: true,
      autoRefreshToken: true,
      detectSessionInUrl: true,
      storageKey: 'supabase.auth.token',
      storage: window.localStorage // Make sure we explicitly use window.localStorage
    }
  }
);

// Add helper functions to safely handle data retrieval
export const getDataOrNull = <T>(response: { data: T | null, error: any }): T | null => {
  if (response.error) {
    console.error("Supabase query error:", response.error);
    return null;
  }
  return response.data;
};

/**
 * Check if a user has admin role
 * This function should only be used for UI conditionals, never for security!
 */
export const isAdminUser = async (userId: string | undefined): Promise<boolean> => {
  if (!userId) return false;
  
  try {
    const { data, error } = await supabase
      .from('profiles')
      .select('role')
      .eq('id', userId)
      .single();
      
    if (error || !data) {
      return false;
    }
    
    return data.role === 'admin';
  } catch (err) {
    console.error('Error checking admin status:', err);
    return false;
  }
};
